#!/bin/bash
set -euo pipefail

print_usage() {
  echo 'racknet public [ipv4|ipv6]'
  echo 'racknet service [ipv4|ipv6]'
  echo ''
  echo 'Examples: '
  echo '          $ racknet public'
  echo '          104.130.0.127'
  echo ''
  echo '          $ racknet service ipv6'
  echo '          fe80::be76:4eff:fe20:b452'
  echo ''
  echo 'Examples when run with Docker: '
  echo '          $ docker run --net=host --rm racknet/ip public'
  echo '          104.130.0.127'
  echo ''
}

docker_warn() {
    echo "If you're in Docker land, make sure to run with --net=host"
}

# Get a specific IP address out, based on IP version and the interface
obtainIP() {
  IPV=${1:-"ipv4"}

  case $IPV in
  "ipv4")
    ;&
  "inet")
    IP_VERSION="inet"
    ;;
  "ipv6")
    ;&
  "inet6")
    IP_VERSION="inet6"
    ;;
  *)
    print_usage
    exit 1
    ;;
  esac

  INTERFACE=${2:-"eth0"}
  addrOut=$(ip -f ${IP_VERSION} addr show ${INTERFACE} 2> /dev/null )
  if [ "$?" != 0 ]; then
    echo "Unable to find an $INTERFACE interface on $IPV"
    echo ""
    docker_warn
    echo ""
    print_usage
    exit 2
  fi

  echo "$addrOut" | awk "/${IP_VERSION} /"' { print $2 }' | awk -F '/' '{print $1}'
}

# Public Net *should* be on eth0
public() {
  IP_VERSION=${1:-"ipv4"}
  IP="$(obtainIP $IP_VERSION eth0)"

  if [ $(echo $IP | grep "^172.\d\+.\d\+.\d\+") ]; then
    echo "Detected eth0 starting with 172.*, likely not running with --net=host"
    echo ""
    print_usage
  fi

  echo $IP
}

# ServiceNet *should* be on eth1
service() {
  IP_VERSION=${1:-"ipv4"}
  echo "$(obtainIP $IP_VERSION eth1)"
}

NETWORK=${1:-"print_usage"}

if [ "$NETWORK" == "--help" ]; then
  print_usage
  exit 0
fi

IP_VERSION=${2:-"ipv4"}

$NETWORK $IP_VERSION
